<?xml version="1.0" encoding = "UTF-8"?>
<launch>
     <arg name="mav_name" default="m100"/>
    <arg name="namespace" default="$(arg mav_name)"/>
    <arg name="model" default="$(find swarmviz_description)/urdf/m100.xacro"/>
   <!-- <arg name="world" default="empty"/> -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="x" default="3.0"/>
    <arg name="y" default="3.0"/>
    <arg name="z" default="3.0"/>
    <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
    <arg name="world_frame" default="map"/> 
    <arg name="base_link_frame" default="$(arg tf_prefix)/base_link"/>

   <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value ="$(find m100_gazebo)/worlds/m100.world" />
    <arg name="paused" value ="$(arg paused)" />
    <arg name="use_sim_time" value ="$(arg use_sim_time)" />
    <arg name="gui" value ="$(arg gui)" />
    <arg name="headless" value ="$(arg headless)" />
    <arg name="debug" value ="$(arg debug)" />
   </include> -->

  <param name="robot_description" command="
   $(find xacro)/xacro '$(arg model)' 
   base_link_frame:=$(arg base_link_frame) 
   world_frame:=$(arg world_frame)
   mav_name:=$(arg mav_name)
   namespace:=$(arg namespace)" 
   />

  <param name="tf_prefix" type="string" value="$(arg tf_prefix)"/>
  <param name="base_link_frame" type="string" value="$(arg base_link_frame)"/>
  <param name="world_frame" type="string" value="$(arg world_frame)"/>

  <!-- Spawn robot -->
  <node name="spawn_uav" pkg="gazebo_ros" type="spawn_model"  
  args=" -urdf 
         -param robot_description 
         -x $(arg x) 
         -y $(arg y) 
         -z $(arg z) 
         -model $(arg namespace)" >
  </node>  

  <!-- publish all the frames to TF -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="publish_frequency" value="50"/> <!-- Hz -->
    </node>
     <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

     <node pkg="tf" type="static_transform_publisher" name="map_to_base_link" 
         args="0 0 0.045 0 0 0 1.0 map m100/base_link 100" />

  <!-- Send a static GPS fix to every new subscriber-->
    <node pkg="rostopic" type="rostopic" name="fake_gps_fix" args="pub /gps/fix sensor_msgs/NavSatFix --latch --file=$(find rviz_satellite)/launch/fix.gps" />

<node pkg="rviz" type="rviz" name="rviz" />

    <!--<node pkg="rviz" type="rviz" name="rviz" args="-d $(find rviz_satellite)/launch/demo.rviz"/>-->


</launch>
